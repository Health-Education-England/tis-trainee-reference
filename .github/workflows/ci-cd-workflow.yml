name: CI/CD Workflow

on: push

jobs:
  assemble:
    name: Assemble JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build with Gradle
        run: ./gradlew assemble

      - name: Upload build artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: app-jar
          path: build/libs/*.jar

  check:
    name: Perform checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run Gradle checks
        run: ./gradlew check -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: reports
          path: build/reports

  test:
    name: Run automated tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run Gradle tests
        run: ./gradlew test

      - name: Upload build artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: reports
          path: build/reports

  analyze:
    name: Perform quality analysis
    needs: [check, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: reports
          path: build/reports

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run checks
        run: ./gradlew check

      - name: Run quality analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube
